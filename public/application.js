// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  jQuery(function() {
    var AddTodoView, Todo, TodoView, Todos, TodosView;
    Todo = (function(_super) {

      __extends(Todo, _super);

      function Todo() {
        return Todo.__super__.constructor.apply(this, arguments);
      }

      Todo.prototype.initialize = function() {
        return this.urlRoot = "/todo";
      };

      Todo.prototype.defaults = {
        title: "Todo",
        description: "No description",
        done: false
      };

      return Todo;

    })(Backbone.Model);
    TodoView = (function(_super) {

      __extends(TodoView, _super);

      function TodoView() {
        return TodoView.__super__.constructor.apply(this, arguments);
      }

      TodoView.prototype.tagName = "li";

      TodoView.prototype.template = $("#todo_view_template").html();

      TodoView.prototype.events = {
        "click :checkbox": "doneChanged"
      };

      TodoView.prototype.render = function() {
        return this.$el.html(_.template(this.template, this.model.attributes));
      };

      TodoView.prototype.initialize = function(options) {
        this.todos = options.todos;
        this.listenTo(this.model, "change", this.render);
        return this.render();
      };

      TodoView.prototype.doneChanged = function(e) {
        this.todos.remove(this.model);
        return this.model.set({
          done: e.currentTarget.checked
        });
      };

      return TodoView;

    })(Backbone.View);
    Todos = (function(_super) {

      __extends(Todos, _super);

      function Todos() {
        return Todos.__super__.constructor.apply(this, arguments);
      }

      Todos.prototype.initialize = function() {
        this.model = Todo;
        return this.url = '/todos';
      };

      Todos.prototype.done = function() {
        return this.filter(function(todo) {
          return todo.get("done");
        });
      };

      return Todos;

    })(Backbone.Collection);
    TodosView = (function(_super) {

      __extends(TodosView, _super);

      function TodosView() {
        return TodosView.__super__.constructor.apply(this, arguments);
      }

      TodosView.prototype.initialize = function() {
        this.views = {};
        this.listenTo(this.model, "change", this.render);
        this.listenTo(this.model, "reset", this.onReset);
        this.listenTo(this.model, "add", this.addView);
        this.listenTo(this.model, "remove", this.removeView);
        this.counter = this.$el.children("span");
        this.list = this.$el.children("ul");
        this.model.each(_.bind(this.addView, this));
        return this.render();
      };

      TodosView.prototype.onReset = function() {
        return this.model.each(_.bind(this.addView, this));
      };

      TodosView.prototype.render = function() {
        return this.counter.html(this.model.size());
      };

      TodosView.prototype.addView = function(newModel) {
        var toAdd;
        toAdd = new TodoView({
          model: newModel,
          todos: this.model
        });
        this.views[newModel.cid] = toAdd;
        this.list.append(toAdd.el);
        return this.render();
      };

      TodosView.prototype.removeView = function(toRemove) {
        this.views[toRemove.cid].remove();
        delete this.views[toRemove.cid];
        return this.render();
      };

      return TodosView;

    })(Backbone.View);
    AddTodoView = (function(_super) {

      __extends(AddTodoView, _super);

      function AddTodoView() {
        return AddTodoView.__super__.constructor.apply(this, arguments);
      }

      AddTodoView.prototype.template = $("#add_todo_view_template").html();

      AddTodoView.prototype.events = {
        "click :button": "addTodo",
        "change #title": "updateTitle",
        "change #description": "updateDescription"
      };

      AddTodoView.prototype.initialize = function(options) {
        this.todos = options.todos;
        this.listenTo(this.model, "change", this.render);
        return this.render();
      };

      AddTodoView.prototype.render = function() {
        return this.$el.html(_.template(this.template, this.model.attributes));
      };

      AddTodoView.prototype.addTodo = function() {
        var toAdd;
        toAdd = this.model.clone();
        toAdd.save();
        return this.todos.add(toAdd);
      };

      AddTodoView.prototype.updateTitle = function(e) {
        return this.model.set({
          title: e.currentTarget.value
        });
      };

      AddTodoView.prototype.updateDescription = function(e) {
        return this.model.set({
          description: e.currentTarget.value
        });
      };

      return AddTodoView;

    })(Backbone.View);
    return $(function() {
      var addTodoView, todos, todosView;
      todos = new Todos;
      todosView = new TodosView({
        el: $('#todos'),
        model: todos
      });
      addTodoView = new AddTodoView({
        el: $('#addTodo'),
        model: new Todo,
        todos: todos
      });
      return todos.fetch();
    });
  });

}).call(this);
